save_path: "/network/projects/_groups/ecosystem-embeddings/exps/debug"
log_comet: true
loc:
  use: false
  concat: false


#number of batches to overfit on, 0 if no overfit 
overfit_batches: 0.0

comet:
  project_name: "debugging" #"ecosystem-duck"
  tags: ["classif", "resnet18"]
experiment:
  task: "ebird_classifier"
  name: "ebird_classifier"

  module:
    model: "resnet18"
    pretrained: False
    lr: 0.0001
    init_bias: "no"
    means_path: "/network/scratch/t/tengmeli/scratch/ecosystem-embedding/training/means_all_species.npy"

auto_lr_find: False

variables:
    ped_means: &ped_means [2230.56361696, 1374.68551614,   20.45478794,   19.04921312,
         31.1196319 ,   61.24246466,   36.68711656,   44.25620165]
    ped_std: &ped_std [2355.3843699 ,  107.88685009,    8.71958154,    6.69679905,
         23.66400261,    8.79233844,    9.91992735,   13.1028541 ]
    bioclim_means: &bioclim_means [ 11.99430391,  12.16226584,  36.94248176, 805.72045945,
        29.4489089 ,  -4.56172133,  34.01063026,  15.81641269,
         7.80845219,  21.77499491,   1.93990004, 902.9704986 ,
       114.61111788,  42.0276728 ,  37.11493781, 315.34206997,
       145.09703767, 231.19724491, 220.06619529]
    bioclim_std: &bioclim_std [  4.62661648,   2.31306195,   8.73155144, 220.15217856,
         3.66556263,   6.94077974,   6.73345032,   7.90953848,
        10.58786476,   3.71622992,   6.67059767, 372.85954139,
        49.59671974,  28.9984291 ,  25.76078507, 138.92188873,
        93.54401194, 130.66050149, 143.05699293]
optimizer: "SGD"  #"Adam"
scheduler: 
  name: "ReduceLROnPlateau" #"ReduceLROnPlateau" #"ReduceLROnPlateau" #or "StepLR" "WarmUp"
  reduce_lr_plateau:
    factor: 0.5
    lr_schedule_patience: 5
  step_lr:
    step_size: 10 
    gamma: 0.5
  warmup:
    warmup_epochs: 10
    max_epochs: 100
  
  cyclical:
    t0: 10
    tmult: 2
  

data:
  loaders:
    num_workers: 12
    batch_size: 20
  #What kind of satellite input ? "refl" for "raw" reflectance values or "img" for 0-255 values (only supported for "rgb" and "nir" bands)
  datatype: "refl" 
  
  bands: ["r","g","b"]
  res: 10 
  
  env: [] #ped", "bioclim"] #["ped", "bioclim"] #["ped", "bioclim"] #"all" "ped" or "bioclim"
  ped: 
      #pedological rasters
      res: 250
  bioclim: 
      #bioclim 
      res: 1000
  
  files:
    base:  "/home/mila/t/tengmeli/ecosystem-embedding/debugging/" #"/network/scratch/t/tengmeli/scratch/ecosystem-embedding/training/" #
    train: "oystercatcher_train.csv" #"train_june_vf.csv"
    val: "oystercatcher_val.csv" #"val_june_vf.csv"
    test: "oystercatcher_val.csv" #"val_june_vf.csv"
    
  target:
    type: "binary"  #binary or probs
    # choose subset of birds : "ducks" for trying on species [37] or "songbirds" (307 species) or None (full set 684 species)
    subset: "oystercatcher" # "not_songbirds" #
 
  #normalization: None
  transforms:
    - name: matchres
      ignore: true
      target_size: [64, 64]
      
    - name: crop
      ignore: false
      p: 1
      ignore_band: ["bioclim", "ped"]
      center: true # disable randomness, crop around the image's center
      height: 64
      width: 64
    - name: resize
      ignore: true
      size: [256,256]
    #- name: crop
    #  ignore: true
    #  p: 0.5
    #  center: "val" #val # disable randomness, crop around the image's center
    #  height: 256
    #  width: 256
    - name: hflip
      ignore: True #"val"
      p: 0.5
    - name: vflip
      ignore: True #"val"
      p: 0.5
    - name: normalize
      ignore: false
      maxchan: false
      subset: ["sat"]
      custom: [[1250.1775, 1088.0417, 818.9687, 2414.3396], [869.4265,1404.8240, 1284.3544,2272.3147 ]]
      #[[87.0467011965099, 91.21045367500467, 67.50251448722302],[67.55043009747773, 51.443316800384295, 49.65159018638426]]
      #[[1250.1775, 1088.0417, 818.9687, 2414.3396], [869.4265,1404.8240, 1284.3544,2272.3147 ]]
      
      #[[87.0467011965099, 91.21045367500467, 67.50251448722302],[67.55043009747773, 51.443316800384295, 49.65159018638426]]
      
      
      #[[1250.1775, 1088.0417, 818.9687, 2414.3396], [869.4265,1404.8240, 1284.3544,2272.3147 ]]
      #ImageNet values 
      #[[0.485, 0.456, 0.406],[0.229, 0.224, 0.225]]
      
      #Mean-std computed on training set
      #california only : means, [1250.1775, 1088.0417, 818.9687, 2414.3396]
                        # std =[869.4265,  1404.8240, 1284.3544,2272.3147 ]
    - name: normalize
      ignore: true
      maxchan: false
      subset: ["bioclim"]
      custom: [*bioclim_means, *bioclim_std]
    - name: normalize
      ignore: true
      maxchan: false
      subset: ["ped"]
      custom: [*ped_means, *ped_std]
    - name: randomnoise
      ignore: True #false
      std: 0.01
      max_noise: 0.05
      
  total_species: 684

losses:
#scale attribute is just for plotting if the values are very small 

  criterion: "BCELoss" #or MAE or MSE  (loss to choosefor optim )
  ce:
    ignore: True
      #weights on the cross entropy
    lambd_pres: 10
    lambd_abs: 1
  metrics:
    - name: ce
      ignore: True
      #weights on the cross entropy
      lambd_pres: 1
      lambd_abs: 1
      scale : 1
    - name: mae
      ignore: False
      scale: 10
    - name: mse
      ignore: False
      scale: 10
    - name: topk
      ignore: True
      k: 30
      scale: 1
    - name: kl
      ignore: False
      scale : 1
    - name: accuracy
      ignore: False
      scale: 1

trainer:
    auto_scale_batch_size: False
